name: Build & Publish wheels
on:
  workflow_dispatch


jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    environment: release
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Build sdist
        run: pipx run build --sdist
      
      - name: Install sdist
        run: pip install dist/*.tar.gz

      - uses: actions/upload-artifact@v4
        with:
          name: "sdist"
          path: dist/*.tar.gz
  
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    environment: release
    strategy:
      fail-fast: true
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Build wheels
        uses: joerick/cibuildwheel@v2.21.2
        env:
          CIBW_TEST_SKIP: "*"
        
      - uses: actions/upload-artifact@v4
        with:
          name: "${{ matrix.os }}"
          path: ./wheelhouse/*.whl
          retention-days: 1
  
  build_wheels_ubuntu_manylinux:
    name: Build x86 manylinux wheels on ubuntu-latest
    runs-on: ubuntu-latest
    environment: release

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build wheels
        uses: joerick/cibuildwheel@v2.21.2
        env:
          CIBW_SKIP: "*aarch64 *ppc64le *s390x *armv7l *-musllinux*"
          CIBW_TEST_SKIP: "*"

      - uses: actions/upload-artifact@v4
        with:
          name: "ubuntu-latest-manylinux"
          path: ./wheelhouse/*.whl
          retention-days: 1

  build_wheels_ubuntu_musllinux:
    name: Build x86 musllinux wheels on ubuntu-latest
    runs-on: ubuntu-latest
    environment: release

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build wheels
        uses: joerick/cibuildwheel@v2.21.2
        env:
          CIBW_SKIP: "*aarch64 *ppc64le *s390x *armv7l *-manylinux*"
          CIBW_TEST_SKIP: "*"

      - uses: actions/upload-artifact@v4
        with:
          name: "ubuntu-latest-musllinux"
          path: ./wheelhouse/*.whl
          retention-days: 1

  build_wheels_qemu:
    name: Build wheels qemu on ubuntu-latest
    runs-on: ubuntu-latest
    environment: release

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Build wheels
        uses: joerick/cibuildwheel@v2.21.2
        env:
          CIBW_SKIP: "*x86_64 *i686"
          CIBW_TEST_SKIP: "*"

      - uses: actions/upload-artifact@v4
        with:
          name: "ubuntu-latest-qemu"
          path: ./wheelhouse/*.whl
          retention-days: 1


  upload_pypi:
    name: Publish to PyPI
    needs: [build_wheels, build_wheels_qemu, build_wheels_ubuntu_manylinux, build_wheels_ubuntu_musllinux, build_sdist]
    runs-on: ubuntu-latest
    environment: release
    permissions:
        id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
