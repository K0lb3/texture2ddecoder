name: Build & Publish wheels

on: [push, pull_request]

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  build_wheels:
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macOS-11]
        cp: ["cp37", "cp38", "cp39", "cp310", "cp311"]

    name: Build ${{ matrix.cp }} wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Build wheels
        uses: joerick/cibuildwheel@v2.11.2
        env:
          CIBW_ARCHS_LINUX: auto aarch64
          CIBW_ARCHS_MACOS: x86_64 arm64 universal2
          CIBW_BUILD: |
            ${{ matrix.cp }}-manylinux_x86_64
            ${{ matrix.cp }}-manylinux_i686
            ${{ matrix.cp }}-manylinux_aarch64
            ${{ matrix.cp }}-win_amd64
            ${{ matrix.cp }}-win32
            ${{ matrix.cp }}-macosx_x86_64
            ${{ matrix.cp }}-macosx_arm64
            ${{ matrix.cp }}-macosx_universal2
          CIBW_TEST_REQUIRES: pytest pillow
          CIBW_TEST_COMMAND: pytest -v -s {package}/tests
          CIBW_TEST_SKIP: "*-macosx_arm64"

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  upload_pypi:
    name: Publish to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
