name: Build & Publish wheels

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macOS-11]
        cp: ["cp37", "cp38", "cp39", "cp310", "cp311"]

    name: Build ${{ matrix.cp }} wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Build wheels
        uses: joerick/cibuildwheel@v2.11.2
        env:
          CIBW_ARCHS_LINUX: auto aarch64
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_BUILD: |
            ${{ matrix.cp }}-manylinux_x86_64 
            ${{ matrix.cp }}-manylinux_i686 
            ${{ matrix.cp }}-manylinux_aarch64 
            ${{ matrix.cp }}-win_amd64 
            ${{ matrix.cp }}-win32
            ${{ matrix.cp }}-macosx_x86_64 
            ${{ matrix.cp }}-macosx_arm64 
            ${{ matrix.cp }}-macosx_universal2
          CIBW_TEST_REQUIRES: pytest pillow
          CIBW_TEST_COMMAND: pytest -v -s {package}/tests
          CIBW_TEST_SKIP: "*-macosx_arm64"
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
            python-version: "3.10"
         
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip wheel setuptools hatch
            pip install --upgrade twine
            
      - name: Publish to PyPI
        env:
            TWINE_USERNAME: __token__
            TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
            twine upload ./wheelhouse/*.whl --skip-existing

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
